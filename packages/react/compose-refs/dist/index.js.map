{
  "version": 3,
  "sources": ["../src/composeRefs.ts"],
  "sourcesContent": ["import * as React from 'react'\n\ntype PossibleRef<T> = React.Ref<T> | undefined\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value)\n  } else if (ref !== null && ref !== undefined) {\n    ;(ref as React.MutableRefObject<T>).current = value\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach(ref => setRef(ref, node))\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  return React.useCallback(composeRefs(...refs), refs)\n}\n\nexport { composeRefs, useComposedRefs }\n"],
  "mappings": "AAAA,UAAYA,MAAW,QAQvB,SAASC,EAAUC,EAAqBC,EAAU,CAC5C,OAAOD,GAAQ,WACjBA,EAAIC,CAAK,EACAD,GAAQ,OACfA,EAAkC,QAAUC,EAElD,CAMA,SAASC,KAAkBC,EAAwB,CACjD,OAAQC,GAAYD,EAAK,QAAQH,GAAOD,EAAOC,EAAKI,CAAI,CAAC,CAC3D,CAMA,SAASC,KAAsBF,EAAwB,CACrD,OAAa,cAAYD,EAAY,GAAGC,CAAI,EAAGA,CAAI,CACrD",
  "names": ["React", "setRef", "ref", "value", "composeRefs", "refs", "node", "useComposedRefs"]
}
